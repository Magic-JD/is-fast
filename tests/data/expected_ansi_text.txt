
[1;39m]66;s=3;Rust By Example[0m



[1;38;2;128;204;204m]66;s=3;for loops[0m



[1;38;2;128;204;204m]66;s=2;for and range[0m


The [38;2;180;142;173mfor [0m[38;2;192;197;206min[0m construct can be used to iterate through an [38;2;192;197;206mIterator[0m. One of the easiest ways to create an iterator is to use the range notation [38;2;192;197;206ma..b[0m. This yields values from [38;2;192;197;206ma[0m (inclusive) to [38;2;192;197;206mb[0m (exclusive) in steps of one.

Let's write FizzBuzz using [38;2;180;142;173mfor[0m instead of [38;2;180;142;173mwhile[0m.

[38;2;180;142;173mfn [0m[38;2;143;161;179mmain[0m[38;2;192;197;206m() {[0m
[38;2;192;197;206m    [0m[38;2;101;115;126m// `n` will take the values: 1, 2, ..., 100 in each iteration[0m
[38;2;192;197;206m    [0m[38;2;180;142;173mfor[0m[38;2;192;197;206m n in [0m[38;2;208;135;112m1[0m[38;2;192;197;206m..[0m[38;2;208;135;112m101 [0m[38;2;192;197;206m{[0m
[38;2;192;197;206m        [0m[38;2;180;142;173mif[0m[38;2;192;197;206m n % [0m[38;2;208;135;112m15 [0m[38;2;192;197;206m== [0m[38;2;208;135;112m0 [0m[38;2;192;197;206m{[0m
[38;2;192;197;206m            println!("[0m[38;2;163;190;140mfizzbuzz[0m[38;2;192;197;206m");[0m
[38;2;192;197;206m        } [0m[38;2;180;142;173melse if[0m[38;2;192;197;206m n % [0m[38;2;208;135;112m3 [0m[38;2;192;197;206m== [0m[38;2;208;135;112m0 [0m[38;2;192;197;206m{[0m
[38;2;192;197;206m            println!("[0m[38;2;163;190;140mfizz[0m[38;2;192;197;206m");[0m
[38;2;192;197;206m        } [0m[38;2;180;142;173melse if[0m[38;2;192;197;206m n % [0m[38;2;208;135;112m5 [0m[38;2;192;197;206m== [0m[38;2;208;135;112m0 [0m[38;2;192;197;206m{[0m
[38;2;192;197;206m            println!("[0m[38;2;163;190;140mbuzz[0m[38;2;192;197;206m");[0m
[38;2;192;197;206m        } [0m[38;2;180;142;173melse [0m[38;2;192;197;206m{[0m
[38;2;192;197;206m            println!("[0m[38;2;208;135;112m{}[0m[38;2;192;197;206m", n);[0m
[38;2;192;197;206m        }[0m
[38;2;192;197;206m    }[0m
[38;2;192;197;206m}[0m

Alternatively, [38;2;192;197;206ma..=b[0m can be used for a range that is inclusive on both ends. The above can be written as:

[38;2;180;142;173mfn [0m[38;2;143;161;179mmain[0m[38;2;192;197;206m() {[0m
[38;2;192;197;206m    [0m[38;2;101;115;126m// `n` will take the values: 1, 2, ..., 100 in each iteration[0m
[38;2;192;197;206m    [0m[38;2;180;142;173mfor[0m[38;2;192;197;206m n in [0m[38;2;208;135;112m1[0m[38;2;192;197;206m..=[0m[38;2;208;135;112m100 [0m[38;2;192;197;206m{[0m
[38;2;192;197;206m        [0m[38;2;180;142;173mif[0m[38;2;192;197;206m n % [0m[38;2;208;135;112m15 [0m[38;2;192;197;206m== [0m[38;2;208;135;112m0 [0m[38;2;192;197;206m{[0m
[38;2;192;197;206m            println!("[0m[38;2;163;190;140mfizzbuzz[0m[38;2;192;197;206m");[0m
[38;2;192;197;206m        } [0m[38;2;180;142;173melse if[0m[38;2;192;197;206m n % [0m[38;2;208;135;112m3 [0m[38;2;192;197;206m== [0m[38;2;208;135;112m0 [0m[38;2;192;197;206m{[0m
[38;2;192;197;206m            println!("[0m[38;2;163;190;140mfizz[0m[38;2;192;197;206m");[0m
[38;2;192;197;206m        } [0m[38;2;180;142;173melse if[0m[38;2;192;197;206m n % [0m[38;2;208;135;112m5 [0m[38;2;192;197;206m== [0m[38;2;208;135;112m0 [0m[38;2;192;197;206m{[0m
[38;2;192;197;206m            println!("[0m[38;2;163;190;140mbuzz[0m[38;2;192;197;206m");[0m
[38;2;192;197;206m        } [0m[38;2;180;142;173melse [0m[38;2;192;197;206m{[0m
[38;2;192;197;206m            println!("[0m[38;2;208;135;112m{}[0m[38;2;192;197;206m", n);[0m
[38;2;192;197;206m        }[0m
[38;2;192;197;206m    }[0m
[38;2;192;197;206m}[0m

[1;38;2;128;204;204m]66;s=2;for and iterators[0m


The [38;2;180;142;173mfor [0m[38;2;192;197;206min[0m construct is able to interact with an [38;2;192;197;206mIterator[0m in several ways. As discussed in the section on the [38;2;128;204;204mIterator[0m trait, by default the [38;2;180;142;173mfor[0m loop will apply the [38;2;192;197;206minto_iter[0m function to the collection. However, this is not the only means of converting collections into iterators.

[38;2;192;197;206minto_iter[0m, [38;2;192;197;206miter[0m and [38;2;192;197;206miter_mut[0m all handle the conversion of a collection into an iterator in different ways, by providing different views on the data within.

[1;39m  â€¢ [0m[1;38;2;192;197;206miter[0m[1;39m - This borrows each element of the collection through each iteration. Thus leaving the collection untouched and available for reuse after the loop.[0m

[38;2;180;142;173mfn [0m[38;2;143;161;179mmain[0m[38;2;192;197;206m() {[0m
[38;2;192;197;206m    [0m[38;2;180;142;173mlet[0m[38;2;192;197;206m names = vec!["[0m[38;2;163;190;140mBob[0m[38;2;192;197;206m", "[0m[38;2;163;190;140mFrank[0m[38;2;192;197;206m", "[0m[38;2;163;190;140mFerris[0m[38;2;192;197;206m"];[0m

[38;2;192;197;206m    [0m[38;2;180;142;173mfor[0m[38;2;192;197;206m name in names.[0m[38;2;150;181;180miter[0m[38;2;192;197;206m() {[0m
[38;2;192;197;206m        [0m[38;2;180;142;173mmatch[0m[38;2;192;197;206m name {[0m
[38;2;192;197;206m            &"[0m[38;2;163;190;140mFerris[0m[38;2;192;197;206m" => println!("[0m[38;2;163;190;140mThere is a rustacean among us![0m[38;2;192;197;206m"),[0m
[38;2;192;197;206m            [0m[38;2;101;115;126m// TODO ^ Try deleting the & and matching just "Ferris"[0m
[38;2;192;197;206m            _ => println!("[0m[38;2;163;190;140mHello [0m[38;2;208;135;112m{}[0m[38;2;192;197;206m", name),[0m
[38;2;192;197;206m        }[0m
[38;2;192;197;206m    }[0m

[38;2;192;197;206m    println!("[0m[38;2;163;190;140mnames: [0m[38;2;208;135;112m{:?}[0m[38;2;192;197;206m", names);[0m
[38;2;192;197;206m}[0m

[1;39m  â€¢ [0m[1;38;2;192;197;206minto_iter[0m[1;39m - This consumes the collection so that on each iteration the exact data is provided. Once the collection has been consumed it is no longer available for reuse as it has been 'moved' within the loop.[0m

[38;2;180;142;173mfn [0m[38;2;143;161;179mmain[0m[38;2;192;197;206m() {[0m
[38;2;192;197;206m    [0m[38;2;180;142;173mlet[0m[38;2;192;197;206m names = vec!["[0m[38;2;163;190;140mBob[0m[38;2;192;197;206m", "[0m[38;2;163;190;140mFrank[0m[38;2;192;197;206m", "[0m[38;2;163;190;140mFerris[0m[38;2;192;197;206m"];[0m

[38;2;192;197;206m    [0m[38;2;180;142;173mfor[0m[38;2;192;197;206m name in names.[0m[38;2;150;181;180minto_iter[0m[38;2;192;197;206m() {[0m
[38;2;192;197;206m        [0m[38;2;180;142;173mmatch[0m[38;2;192;197;206m name {[0m
[38;2;192;197;206m            "[0m[38;2;163;190;140mFerris[0m[38;2;192;197;206m" => println!("[0m[38;2;163;190;140mThere is a rustacean among us![0m[38;2;192;197;206m"),[0m
[38;2;192;197;206m            _ => println!("[0m[38;2;163;190;140mHello [0m[38;2;208;135;112m{}[0m[38;2;192;197;206m", name),[0m
[38;2;192;197;206m        }[0m
[38;2;192;197;206m    }[0m

[38;2;192;197;206m    println!("[0m[38;2;163;190;140mnames: [0m[38;2;208;135;112m{:?}[0m[38;2;192;197;206m", names);[0m
[38;2;192;197;206m    [0m[38;2;101;115;126m// FIXME ^ Comment out this line[0m
[38;2;192;197;206m}[0m

[1;39m  â€¢ [0m[1;38;2;192;197;206miter_mut[0m[1;39m - This mutably borrows each element of the collection, allowing for the collection to be modified in place.[0m

[38;2;180;142;173mfn [0m[38;2;143;161;179mmain[0m[38;2;192;197;206m() {[0m
[38;2;192;197;206m    [0m[38;2;180;142;173mlet mut[0m[38;2;192;197;206m names = vec!["[0m[38;2;163;190;140mBob[0m[38;2;192;197;206m", "[0m[38;2;163;190;140mFrank[0m[38;2;192;197;206m", "[0m[38;2;163;190;140mFerris[0m[38;2;192;197;206m"];[0m

[38;2;192;197;206m    [0m[38;2;180;142;173mfor[0m[38;2;192;197;206m name in names.[0m[38;2;150;181;180miter_mut[0m[38;2;192;197;206m() {[0m
[38;2;192;197;206m        *name = [0m[38;2;180;142;173mmatch[0m[38;2;192;197;206m name {[0m
[38;2;192;197;206m            &[0m[38;2;180;142;173mmut [0m[38;2;192;197;206m"[0m[38;2;163;190;140mFerris[0m[38;2;192;197;206m" => "[0m[38;2;163;190;140mThere is a rustacean among us![0m[38;2;192;197;206m",[0m
[38;2;192;197;206m            _ => "[0m[38;2;163;190;140mHello[0m[38;2;192;197;206m",[0m
[38;2;192;197;206m        }[0m
[38;2;192;197;206m    }[0m

[38;2;192;197;206m    println!("[0m[38;2;163;190;140mnames: [0m[38;2;208;135;112m{:?}[0m[38;2;192;197;206m", names);[0m
[38;2;192;197;206m}[0m

In the above snippets note the type of [38;2;180;142;173mmatch[0m branch, that is the key difference in the types of iteration. The difference in type then of course implies differing actions that are able to be performed.

[1;38;2;128;204;204m]66;s=2;See also:[0m


[38;2;128;204;204mIterator[0m

